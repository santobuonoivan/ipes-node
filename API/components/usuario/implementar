-- Drop table

-- DROP TABLE app_energy.permissions;

CREATE TABLE app_energy.permissions (
	id serial NOT NULL,
	title varchar(100) NOT NULL,
	"module" varchar(50) NOT NULL,
	"action" varchar(50) NOT NULL,
	CONSTRAINT permissions_pkey PRIMARY KEY (id)
);
CREATE UNIQUE INDEX permission_module_action_idx ON app_energy.permissions USING btree (module, action);



-- Drop table

-- DROP TABLE app_energy.permission_user;

CREATE TABLE app_energy.permission_user (
	user_id int4 NOT NULL,
	permission_id int4 NOT NULL,
	CONSTRAINT permission_user_pkey PRIMARY KEY (user_id, permission_id),
	CONSTRAINT permission_user_fk FOREIGN KEY (user_id) REFERENCES users(id),
	CONSTRAINT permission_user_permission_id_fkey FOREIGN KEY (permission_id) REFERENCES permissions(id) ON UPDATE CASCADE ON DELETE CASCADE
);


-- Drop table

-- DROP TABLE app_energy.permission_role;

CREATE TABLE app_energy.permission_role (
	permission_id int4 NOT NULL,
	role_id int4 NULL,
	CONSTRAINT permission_role_permission_id_role_id_key UNIQUE (permission_id, role_id),
	CONSTRAINT permission_role_pkey PRIMARY KEY (permission_id),
	CONSTRAINT permission_role_permission_id_fkey FOREIGN KEY (permission_id) REFERENCES permissions(id) ON UPDATE CASCADE ON DELETE CASCADE,
	CONSTRAINT permission_role_role_id_fkey FOREIGN KEY (role_id) REFERENCES roles(id) ON UPDATE CASCADE ON DELETE CASCADE
);



-- Drop table

-- DROP TABLE app_energy.roles;

CREATE TABLE app_energy.roles (
	id serial NOT NULL,
	"name" varchar(100) NOT NULL,
	parent int4 NULL,
	is_active bool NOT NULL,
	created_at timestamptz NULL,
	updated_at timestamptz NULL,
	CONSTRAINT roles_pkey PRIMARY KEY (id),
	CONSTRAINT roles_parent_fkey FOREIGN KEY (parent) REFERENCES roles(id) ON UPDATE CASCADE ON DELETE SET NULL
);



-- Drop table

-- DROP TABLE app_energy.user_roles;

CREATE TABLE app_energy.user_roles (
	user_id int4 NOT NULL,
	role_id int4 NOT NULL,
	CONSTRAINT user_roles_pkey PRIMARY KEY (user_id, role_id),
	CONSTRAINT user_roles_role_id_fkey FOREIGN KEY (role_id) REFERENCES roles(id) ON UPDATE CASCADE ON DELETE CASCADE,
	CONSTRAINT user_roles_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE
);

